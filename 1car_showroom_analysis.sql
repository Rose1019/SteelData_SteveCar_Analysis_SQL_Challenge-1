create table cars(
c_id int primary key,
make varchar(50),
type varchar(50),
style varchar(50),
cost_$ int);

insert into cars
values
(1, 'Honda', 'Civic', 'Sedan', 30000),
(2, 'Toyota', 'Corolla', 'Hatchback', 25000),
(3, 'Ford', 'Explorer', 'SUV', 40000),
(4, 'Chevrolet', 'Camaro', 'Coupe', 36000),
(5, 'BMW', 'X5', 'SUV', 55000),
(6, 'Audi', 'A4', 'Sedan', 48000),
(7, 'Mercedes', 'C-Class', 'Coupe', 60000),
(8, 'Nissan', 'Altima', 'Sedan', 26000);

create table salespersons(
sm_id int primary key,
name varchar(45),
age int,
city varchar(20));

insert into salespersons
values
(1, 'John Smith', 28, 'New York'),
(2, 'Emily Wong', 35, 'San Fran'),
(3, 'Tom Lee', 42, 'Seattle'),
(4, 'Lucy Chen', 31, 'LA');

create table sales(
s_id int,
c_id int,
sm_id int,
purchase_date date,
foreign key (c_id) references cars(c_id),
foreign key(sm_id) references salespersons(sm_id));

insert into sales
values
(1, 1, 1, '2021-01-01'),
(2, 3, 3, '2021-02-03'),
(3, 2, 2, '2021-02-10'),
(4, 5, 4, '2021-03-01'),
(5, 8, 1, '2021-04-02'),
(6, 2, 1, '2021-05-05'),
(7, 4, 2, '2021-06-07'),
(8, 5, 3, '2021-07-09'),
(9, 2, 4, '2022-01-01'),
(10, 1, 3, '2022-02-03'),
(11, 8, 2, '2022-02-10'),
(12, 7, 2, '2022-03-01'),
(13, 5, 3, '2022-04-02'),
(14, 3, 1, '2022-05-05'),
(15, 5, 4, '2022-06-07'),
(16, 1, 2, '2022-07-09'),
(17, 2, 3, '2023-01-01'),
(18, 6, 3, '2023-02-03'),
(19, 7, 1, '2023-02-10'),
(20, 4, 4, '2023-03-01');


/*Questions*/

/*1.What are the details of all cars purchased in the year 2022?*/

/*using YEAR() to extract YEAR from a given date*/

select year(purchase_date) as year
from sales;

select *
from cars c
join sales s
using(c_id)
where year(s.purchase_date) = '2022';

/*2. What is the total number of cars sold by each salesperson?*/

select s.sm_id,count(s.c_id) as total_cars_sold
from sales s 
join salespersons sp 
using(sm_id)
group by s.sm_id;

/*3. What is the total revenue generated by each salesperson?*/

/*Logic: Revenue = total_cars_sold_per_salesma * cost*/

select sp.sm_id,sp.name,
		sum(c.cost_$) as Total_revenue
from sales s 
join salespersons sp 
using(sm_id)
join cars c
using(c_id)
group by s.sm_id,sp.name;

/*STORED PROCEDURE to fetch the revenue for any sales person*/
/* create procedure revenue_from_saleasperson (
         IN in_salespersonID int 
)
BEGIN
select sp.sm_id,sp.name,
		sum(c.cost_$) as Total_revenue
from sales s 
join salespersons sp 
using(sm_id)
join cars c
using(c_id)
where sp.sm_id=in_salespersonID
group by s.sm_id,sp.name;
END


/*4. What are the details of the cars sold by each salesperson?*/

select sp.sm_id,sp.name,
		c.c_id,c.make,c.type,c.style,c.cost_$,s.purchase_date
from sales s 
join salespersons sp 
using(sm_id)
join cars c
using(c_id);

/*AUTOMATED to get the details of car sold for any salesperson for the any sales year*/
/*CREATE DEFINER=`root`@`localhost` PROCEDURE `car_details_sold_by_each_salesperson`(
				IN in_salespersonID int,
                 IN in_year year
)
BEGIN
select	c.c_id,c.make,c.type,c.style,c.cost_$,s.purchase_date
from sales s 
join salespersons sp 
using(sm_id)
join cars c
using(c_id)
where sp.sm_id=in_salespersonID
AND
get_year(s.purchase_date)=in_year;
END
*/

/*5. What is the total revenue generated by each car type?*/
select distinct(type)
from cars;

/*Logic: Revenue by each car TYPE = cost of each type * number of cars sold*/

select c.type,sum(c.cost_$) as Revenue
from cars c 
join sales s 
using(c_id)
group by c.type,c.cost_$;

/*6. What are the details of the cars sold in the year 2021 by salesperson 'Emily Wong'?*/

select sp.name,
		c.c_id,c.make,c.type,c.style,c.cost_$,s.purchase_date
from sales s 
join salespersons sp 
using(sm_id)
join cars c
using(c_id)
where sp.sm_id=2 AND year(s.purchase_date)='2021';

/*7. What is the total revenue generated by the sales of hatchback cars?*/

select c.style,sum(c.cost_$) as Total_Revenue
from cars c 
join sales s 
using(c_id)
where c.style='Hatchback'
;

/*8. What is the total revenue generated by the sales of SUV cars in the year 2022?*/

select sum(cost_$) as SUV_cars_Total_Revenue
from cars c 
join sales s 
using(c_id)
where c.style = 'SUV' AND year(s.purchase_date)='2022';

/*Create a function to get the YEAR value when for a given date*/
/*  create function get_year (
   calendar_date date
)
Returns int
    DETERMINISTIC
BEGIN
DECLARE Year int;
SET Year = Year(calendar_date);
RETURN Year;
END
*/

/*STORED PROCEDURE for any style of car for any given year*/
/* 
create procedure revenue_any_car_type_year(
         IN in_car_type char,
         IN in_year year
)
BEGIN
    select sum(cost_$) as Total_Revenue,s.purchase_date
	from cars c 
	join sales s 
	using(c_id)
	where c.style = in_car_type 
    AND get_year(s.purchase_date)=in_year;
    END    
    
 /*9. What is the name and city of the salesperson who sold the most number of cars in the year 2023?*/   
 
 WITH cte1 AS (
    SELECT sp.sm_id, sp.name AS SalesPerson, sp.city, COUNT(*) AS cars_sold
    FROM salespersons sp
    JOIN sales s ON sp.sm_id = s.sm_id
    WHERE YEAR(s.purchase_date) = 2023
    GROUP BY sp.sm_id, sp.name, sp.city
)
 
SELECT *
FROM cte1
order by cars_sold desc
limit 1;

/*Create STORED PROCEDURE to get a report of salesperson who sold the most number of cars in any given YEAR
input - YEAR*/

/*CREATE PROCEDURE `report_salesperson_sold_most_cars_given_year` (
				IN in_year year
)
BEGIN
WITH cte1 AS (
    SELECT sp.sm_id, sp.name AS SalesPerson, sp.city, COUNT(*) AS cars_sold
    FROM salespersons sp
    JOIN sales s ON sp.sm_id = s.sm_id
    WHERE YEAR(s.purchase_date) = 2023
    GROUP BY sp.sm_id, sp.name, sp.city
)
 
SELECT *
FROM cte1
order by cars_sold desc
limit 1;
END
*/

/*10. What is the name and age of the salesperson who generated the highest revenue in the year 2022?*/

with cte1 AS(
select sp.sm_id,sp.name,sp.age,sum(c.cost_$) as revenue
from salespersons sp 
join sales s 
using(sm_id)
join cars c 
using(c_id)
WHERE YEAR(s.purchase_date) = 2022
group by sp.sm_id,sp.name,sp.age
)

select *
from cte1
order by revenue desc
limit 1;

/*Create a STORED PROCEDURE , to get report on any given YEAR which slaes person earns the highest revenue*/
 
 
 
 
 
 






